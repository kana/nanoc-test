#!/usr/bin/env ruby

preprocess do
  def mangle(email)
    sp = '<span class="nospam">&#9251;</span>'
    email.gsub(/[@.]/, "#{sp}\\0#{sp}")
  end
  config[:site] = begin
    h = {}
    h[:author] = 'Kana Natsuno'
    h[:email] = mangle("kana\100whileimautomaton.net")
    h[:domain] = 'whileimautomaton.net'
    h[:name] = 'while ("im automaton");'
    h[:prefix] = "http://#{h[:domain]}"
    h[:signature] = "#{h[:author]} &lt;#{h[:email]}&gt;"
    h[:uri] = "#{h[:prefix]}/"
    h
  end
  config[:recent_topic_count] = 5

  topics_per_month =
    items
    .select(&:topic?)
    .group_by {|i| i.identifier.match(%r{^(/\d+/\d+/)\d+/$})[1]}
  topics_per_month.each do |id, topics|
    items << Nanoc::Item.new(
      "",
      {
        :title => id.sub(%r{/(\d+)/(\d+)/}, '\1-\2'),
        :topics => topics,
      },
      id
    )
  end
end

compile '/stylesheet/' do
  # don't filter or layout
end

compile '*' do
  if item.binary?
    # don't filter binary items
  else
    filter :erb
    filter :kramdown,
      :input => 'GFM',
      :hard_wrap => false,
      :auto_ids => false

    if item.topic?
      layout 'topic'
    end
    if item.month_view?
      layout 'month_view'
    end
    layout 'default'
  end
end

route '/stylesheet/' do
  '/style.css'
end

route '/' do
  '/index.html'
end

route '*' do
  if item.binary?
    # /foo/ => /foo.ext
    item.identifier.chop + '.' + item[:extension]
  else
    if item.month_view?
      # /YYYY/MM/ => /YYYY/MM/index.html
      item.identifier + 'index.html'
    else
      # /foo/ => /foo.html
      item.identifier.chop + '.html'
    end
  end
end

layout '*', :haml, :format => :xhtml, :ugly => true
